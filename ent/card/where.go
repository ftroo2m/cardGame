// Code generated by ent, DO NOT EDIT.

package card

import (
	"cardGame/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Card {
	return predicate.Card(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Card {
	return predicate.Card(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Card {
	return predicate.Card(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Card {
	return predicate.Card(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Card {
	return predicate.Card(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Card {
	return predicate.Card(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Card {
	return predicate.Card(sql.FieldLTE(FieldID, id))
}

// Name applies equality check predicate on the "Name" field. It's identical to NameEQ.
func Name(v string) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldName, v))
}

// Type applies equality check predicate on the "Type" field. It's identical to TypeEQ.
func Type(v string) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldType, v))
}

// Energy applies equality check predicate on the "Energy" field. It's identical to EnergyEQ.
func Energy(v int) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldEnergy, v))
}

// Target applies equality check predicate on the "Target" field. It's identical to TargetEQ.
func Target(v string) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldTarget, v))
}

// Block applies equality check predicate on the "Block" field. It's identical to BlockEQ.
func Block(v int) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldBlock, v))
}

// Damage applies equality check predicate on the "Damage" field. It's identical to DamageEQ.
func Damage(v int) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldDamage, v))
}

// Description applies equality check predicate on the "Description" field. It's identical to DescriptionEQ.
func Description(v string) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldDescription, v))
}

// Image applies equality check predicate on the "Image" field. It's identical to ImageEQ.
func Image(v string) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldImage, v))
}

// Upgrade applies equality check predicate on the "Upgrade" field. It's identical to UpgradeEQ.
func Upgrade(v int) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldUpgrade, v))
}

// NameEQ applies the EQ predicate on the "Name" field.
func NameEQ(v string) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "Name" field.
func NameNEQ(v string) predicate.Card {
	return predicate.Card(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "Name" field.
func NameIn(vs ...string) predicate.Card {
	return predicate.Card(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "Name" field.
func NameNotIn(vs ...string) predicate.Card {
	return predicate.Card(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "Name" field.
func NameGT(v string) predicate.Card {
	return predicate.Card(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "Name" field.
func NameGTE(v string) predicate.Card {
	return predicate.Card(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "Name" field.
func NameLT(v string) predicate.Card {
	return predicate.Card(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "Name" field.
func NameLTE(v string) predicate.Card {
	return predicate.Card(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "Name" field.
func NameContains(v string) predicate.Card {
	return predicate.Card(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "Name" field.
func NameHasPrefix(v string) predicate.Card {
	return predicate.Card(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "Name" field.
func NameHasSuffix(v string) predicate.Card {
	return predicate.Card(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "Name" field.
func NameEqualFold(v string) predicate.Card {
	return predicate.Card(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "Name" field.
func NameContainsFold(v string) predicate.Card {
	return predicate.Card(sql.FieldContainsFold(FieldName, v))
}

// TypeEQ applies the EQ predicate on the "Type" field.
func TypeEQ(v string) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "Type" field.
func TypeNEQ(v string) predicate.Card {
	return predicate.Card(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "Type" field.
func TypeIn(vs ...string) predicate.Card {
	return predicate.Card(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "Type" field.
func TypeNotIn(vs ...string) predicate.Card {
	return predicate.Card(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "Type" field.
func TypeGT(v string) predicate.Card {
	return predicate.Card(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "Type" field.
func TypeGTE(v string) predicate.Card {
	return predicate.Card(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "Type" field.
func TypeLT(v string) predicate.Card {
	return predicate.Card(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "Type" field.
func TypeLTE(v string) predicate.Card {
	return predicate.Card(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "Type" field.
func TypeContains(v string) predicate.Card {
	return predicate.Card(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "Type" field.
func TypeHasPrefix(v string) predicate.Card {
	return predicate.Card(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "Type" field.
func TypeHasSuffix(v string) predicate.Card {
	return predicate.Card(sql.FieldHasSuffix(FieldType, v))
}

// TypeEqualFold applies the EqualFold predicate on the "Type" field.
func TypeEqualFold(v string) predicate.Card {
	return predicate.Card(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "Type" field.
func TypeContainsFold(v string) predicate.Card {
	return predicate.Card(sql.FieldContainsFold(FieldType, v))
}

// EnergyEQ applies the EQ predicate on the "Energy" field.
func EnergyEQ(v int) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldEnergy, v))
}

// EnergyNEQ applies the NEQ predicate on the "Energy" field.
func EnergyNEQ(v int) predicate.Card {
	return predicate.Card(sql.FieldNEQ(FieldEnergy, v))
}

// EnergyIn applies the In predicate on the "Energy" field.
func EnergyIn(vs ...int) predicate.Card {
	return predicate.Card(sql.FieldIn(FieldEnergy, vs...))
}

// EnergyNotIn applies the NotIn predicate on the "Energy" field.
func EnergyNotIn(vs ...int) predicate.Card {
	return predicate.Card(sql.FieldNotIn(FieldEnergy, vs...))
}

// EnergyGT applies the GT predicate on the "Energy" field.
func EnergyGT(v int) predicate.Card {
	return predicate.Card(sql.FieldGT(FieldEnergy, v))
}

// EnergyGTE applies the GTE predicate on the "Energy" field.
func EnergyGTE(v int) predicate.Card {
	return predicate.Card(sql.FieldGTE(FieldEnergy, v))
}

// EnergyLT applies the LT predicate on the "Energy" field.
func EnergyLT(v int) predicate.Card {
	return predicate.Card(sql.FieldLT(FieldEnergy, v))
}

// EnergyLTE applies the LTE predicate on the "Energy" field.
func EnergyLTE(v int) predicate.Card {
	return predicate.Card(sql.FieldLTE(FieldEnergy, v))
}

// TargetEQ applies the EQ predicate on the "Target" field.
func TargetEQ(v string) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldTarget, v))
}

// TargetNEQ applies the NEQ predicate on the "Target" field.
func TargetNEQ(v string) predicate.Card {
	return predicate.Card(sql.FieldNEQ(FieldTarget, v))
}

// TargetIn applies the In predicate on the "Target" field.
func TargetIn(vs ...string) predicate.Card {
	return predicate.Card(sql.FieldIn(FieldTarget, vs...))
}

// TargetNotIn applies the NotIn predicate on the "Target" field.
func TargetNotIn(vs ...string) predicate.Card {
	return predicate.Card(sql.FieldNotIn(FieldTarget, vs...))
}

// TargetGT applies the GT predicate on the "Target" field.
func TargetGT(v string) predicate.Card {
	return predicate.Card(sql.FieldGT(FieldTarget, v))
}

// TargetGTE applies the GTE predicate on the "Target" field.
func TargetGTE(v string) predicate.Card {
	return predicate.Card(sql.FieldGTE(FieldTarget, v))
}

// TargetLT applies the LT predicate on the "Target" field.
func TargetLT(v string) predicate.Card {
	return predicate.Card(sql.FieldLT(FieldTarget, v))
}

// TargetLTE applies the LTE predicate on the "Target" field.
func TargetLTE(v string) predicate.Card {
	return predicate.Card(sql.FieldLTE(FieldTarget, v))
}

// TargetContains applies the Contains predicate on the "Target" field.
func TargetContains(v string) predicate.Card {
	return predicate.Card(sql.FieldContains(FieldTarget, v))
}

// TargetHasPrefix applies the HasPrefix predicate on the "Target" field.
func TargetHasPrefix(v string) predicate.Card {
	return predicate.Card(sql.FieldHasPrefix(FieldTarget, v))
}

// TargetHasSuffix applies the HasSuffix predicate on the "Target" field.
func TargetHasSuffix(v string) predicate.Card {
	return predicate.Card(sql.FieldHasSuffix(FieldTarget, v))
}

// TargetEqualFold applies the EqualFold predicate on the "Target" field.
func TargetEqualFold(v string) predicate.Card {
	return predicate.Card(sql.FieldEqualFold(FieldTarget, v))
}

// TargetContainsFold applies the ContainsFold predicate on the "Target" field.
func TargetContainsFold(v string) predicate.Card {
	return predicate.Card(sql.FieldContainsFold(FieldTarget, v))
}

// BlockEQ applies the EQ predicate on the "Block" field.
func BlockEQ(v int) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldBlock, v))
}

// BlockNEQ applies the NEQ predicate on the "Block" field.
func BlockNEQ(v int) predicate.Card {
	return predicate.Card(sql.FieldNEQ(FieldBlock, v))
}

// BlockIn applies the In predicate on the "Block" field.
func BlockIn(vs ...int) predicate.Card {
	return predicate.Card(sql.FieldIn(FieldBlock, vs...))
}

// BlockNotIn applies the NotIn predicate on the "Block" field.
func BlockNotIn(vs ...int) predicate.Card {
	return predicate.Card(sql.FieldNotIn(FieldBlock, vs...))
}

// BlockGT applies the GT predicate on the "Block" field.
func BlockGT(v int) predicate.Card {
	return predicate.Card(sql.FieldGT(FieldBlock, v))
}

// BlockGTE applies the GTE predicate on the "Block" field.
func BlockGTE(v int) predicate.Card {
	return predicate.Card(sql.FieldGTE(FieldBlock, v))
}

// BlockLT applies the LT predicate on the "Block" field.
func BlockLT(v int) predicate.Card {
	return predicate.Card(sql.FieldLT(FieldBlock, v))
}

// BlockLTE applies the LTE predicate on the "Block" field.
func BlockLTE(v int) predicate.Card {
	return predicate.Card(sql.FieldLTE(FieldBlock, v))
}

// DamageEQ applies the EQ predicate on the "Damage" field.
func DamageEQ(v int) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldDamage, v))
}

// DamageNEQ applies the NEQ predicate on the "Damage" field.
func DamageNEQ(v int) predicate.Card {
	return predicate.Card(sql.FieldNEQ(FieldDamage, v))
}

// DamageIn applies the In predicate on the "Damage" field.
func DamageIn(vs ...int) predicate.Card {
	return predicate.Card(sql.FieldIn(FieldDamage, vs...))
}

// DamageNotIn applies the NotIn predicate on the "Damage" field.
func DamageNotIn(vs ...int) predicate.Card {
	return predicate.Card(sql.FieldNotIn(FieldDamage, vs...))
}

// DamageGT applies the GT predicate on the "Damage" field.
func DamageGT(v int) predicate.Card {
	return predicate.Card(sql.FieldGT(FieldDamage, v))
}

// DamageGTE applies the GTE predicate on the "Damage" field.
func DamageGTE(v int) predicate.Card {
	return predicate.Card(sql.FieldGTE(FieldDamage, v))
}

// DamageLT applies the LT predicate on the "Damage" field.
func DamageLT(v int) predicate.Card {
	return predicate.Card(sql.FieldLT(FieldDamage, v))
}

// DamageLTE applies the LTE predicate on the "Damage" field.
func DamageLTE(v int) predicate.Card {
	return predicate.Card(sql.FieldLTE(FieldDamage, v))
}

// DescriptionEQ applies the EQ predicate on the "Description" field.
func DescriptionEQ(v string) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldDescription, v))
}

// DescriptionNEQ applies the NEQ predicate on the "Description" field.
func DescriptionNEQ(v string) predicate.Card {
	return predicate.Card(sql.FieldNEQ(FieldDescription, v))
}

// DescriptionIn applies the In predicate on the "Description" field.
func DescriptionIn(vs ...string) predicate.Card {
	return predicate.Card(sql.FieldIn(FieldDescription, vs...))
}

// DescriptionNotIn applies the NotIn predicate on the "Description" field.
func DescriptionNotIn(vs ...string) predicate.Card {
	return predicate.Card(sql.FieldNotIn(FieldDescription, vs...))
}

// DescriptionGT applies the GT predicate on the "Description" field.
func DescriptionGT(v string) predicate.Card {
	return predicate.Card(sql.FieldGT(FieldDescription, v))
}

// DescriptionGTE applies the GTE predicate on the "Description" field.
func DescriptionGTE(v string) predicate.Card {
	return predicate.Card(sql.FieldGTE(FieldDescription, v))
}

// DescriptionLT applies the LT predicate on the "Description" field.
func DescriptionLT(v string) predicate.Card {
	return predicate.Card(sql.FieldLT(FieldDescription, v))
}

// DescriptionLTE applies the LTE predicate on the "Description" field.
func DescriptionLTE(v string) predicate.Card {
	return predicate.Card(sql.FieldLTE(FieldDescription, v))
}

// DescriptionContains applies the Contains predicate on the "Description" field.
func DescriptionContains(v string) predicate.Card {
	return predicate.Card(sql.FieldContains(FieldDescription, v))
}

// DescriptionHasPrefix applies the HasPrefix predicate on the "Description" field.
func DescriptionHasPrefix(v string) predicate.Card {
	return predicate.Card(sql.FieldHasPrefix(FieldDescription, v))
}

// DescriptionHasSuffix applies the HasSuffix predicate on the "Description" field.
func DescriptionHasSuffix(v string) predicate.Card {
	return predicate.Card(sql.FieldHasSuffix(FieldDescription, v))
}

// DescriptionEqualFold applies the EqualFold predicate on the "Description" field.
func DescriptionEqualFold(v string) predicate.Card {
	return predicate.Card(sql.FieldEqualFold(FieldDescription, v))
}

// DescriptionContainsFold applies the ContainsFold predicate on the "Description" field.
func DescriptionContainsFold(v string) predicate.Card {
	return predicate.Card(sql.FieldContainsFold(FieldDescription, v))
}

// ImageEQ applies the EQ predicate on the "Image" field.
func ImageEQ(v string) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldImage, v))
}

// ImageNEQ applies the NEQ predicate on the "Image" field.
func ImageNEQ(v string) predicate.Card {
	return predicate.Card(sql.FieldNEQ(FieldImage, v))
}

// ImageIn applies the In predicate on the "Image" field.
func ImageIn(vs ...string) predicate.Card {
	return predicate.Card(sql.FieldIn(FieldImage, vs...))
}

// ImageNotIn applies the NotIn predicate on the "Image" field.
func ImageNotIn(vs ...string) predicate.Card {
	return predicate.Card(sql.FieldNotIn(FieldImage, vs...))
}

// ImageGT applies the GT predicate on the "Image" field.
func ImageGT(v string) predicate.Card {
	return predicate.Card(sql.FieldGT(FieldImage, v))
}

// ImageGTE applies the GTE predicate on the "Image" field.
func ImageGTE(v string) predicate.Card {
	return predicate.Card(sql.FieldGTE(FieldImage, v))
}

// ImageLT applies the LT predicate on the "Image" field.
func ImageLT(v string) predicate.Card {
	return predicate.Card(sql.FieldLT(FieldImage, v))
}

// ImageLTE applies the LTE predicate on the "Image" field.
func ImageLTE(v string) predicate.Card {
	return predicate.Card(sql.FieldLTE(FieldImage, v))
}

// ImageContains applies the Contains predicate on the "Image" field.
func ImageContains(v string) predicate.Card {
	return predicate.Card(sql.FieldContains(FieldImage, v))
}

// ImageHasPrefix applies the HasPrefix predicate on the "Image" field.
func ImageHasPrefix(v string) predicate.Card {
	return predicate.Card(sql.FieldHasPrefix(FieldImage, v))
}

// ImageHasSuffix applies the HasSuffix predicate on the "Image" field.
func ImageHasSuffix(v string) predicate.Card {
	return predicate.Card(sql.FieldHasSuffix(FieldImage, v))
}

// ImageEqualFold applies the EqualFold predicate on the "Image" field.
func ImageEqualFold(v string) predicate.Card {
	return predicate.Card(sql.FieldEqualFold(FieldImage, v))
}

// ImageContainsFold applies the ContainsFold predicate on the "Image" field.
func ImageContainsFold(v string) predicate.Card {
	return predicate.Card(sql.FieldContainsFold(FieldImage, v))
}

// UpgradeEQ applies the EQ predicate on the "Upgrade" field.
func UpgradeEQ(v int) predicate.Card {
	return predicate.Card(sql.FieldEQ(FieldUpgrade, v))
}

// UpgradeNEQ applies the NEQ predicate on the "Upgrade" field.
func UpgradeNEQ(v int) predicate.Card {
	return predicate.Card(sql.FieldNEQ(FieldUpgrade, v))
}

// UpgradeIn applies the In predicate on the "Upgrade" field.
func UpgradeIn(vs ...int) predicate.Card {
	return predicate.Card(sql.FieldIn(FieldUpgrade, vs...))
}

// UpgradeNotIn applies the NotIn predicate on the "Upgrade" field.
func UpgradeNotIn(vs ...int) predicate.Card {
	return predicate.Card(sql.FieldNotIn(FieldUpgrade, vs...))
}

// UpgradeGT applies the GT predicate on the "Upgrade" field.
func UpgradeGT(v int) predicate.Card {
	return predicate.Card(sql.FieldGT(FieldUpgrade, v))
}

// UpgradeGTE applies the GTE predicate on the "Upgrade" field.
func UpgradeGTE(v int) predicate.Card {
	return predicate.Card(sql.FieldGTE(FieldUpgrade, v))
}

// UpgradeLT applies the LT predicate on the "Upgrade" field.
func UpgradeLT(v int) predicate.Card {
	return predicate.Card(sql.FieldLT(FieldUpgrade, v))
}

// UpgradeLTE applies the LTE predicate on the "Upgrade" field.
func UpgradeLTE(v int) predicate.Card {
	return predicate.Card(sql.FieldLTE(FieldUpgrade, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Card) predicate.Card {
	return predicate.Card(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Card) predicate.Card {
	return predicate.Card(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Card) predicate.Card {
	return predicate.Card(sql.NotPredicates(p))
}
