// Code generated by ent, DO NOT EDIT.

package userconfig

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the userconfig type in the database.
	Label = "user_config"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPlayerID holds the string denoting the playerid field in the database.
	FieldPlayerID = "playerID"
	// FieldCards holds the string denoting the cards field in the database.
	FieldCards = "cards"
	// FieldLadder holds the string denoting the ladder field in the database.
	FieldLadder = "ladder"
	// FieldPlayerHP holds the string denoting the playerhp field in the database.
	FieldPlayerHP = "playerHP"
	// FieldPlayerEnergy holds the string denoting the playerenergy field in the database.
	FieldPlayerEnergy = "playerEnergy"
	// FieldImage holds the string denoting the image field in the database.
	FieldImage = "image"
	// Table holds the table name of the userconfig in the database.
	Table = "userconfigs"
)

// Columns holds all SQL columns for userconfig fields.
var Columns = []string{
	FieldID,
	FieldPlayerID,
	FieldCards,
	FieldLadder,
	FieldPlayerHP,
	FieldPlayerEnergy,
	FieldImage,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// PlayerIDValidator is a validator for the "playerID" field. It is called by the builders before save.
	PlayerIDValidator func(string) error
	// LadderValidator is a validator for the "ladder" field. It is called by the builders before save.
	LadderValidator func(string) error
)

// OrderOption defines the ordering options for the UserConfig queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPlayerID orders the results by the playerID field.
func ByPlayerID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPlayerID, opts...).ToFunc()
}

// ByLadder orders the results by the ladder field.
func ByLadder(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLadder, opts...).ToFunc()
}

// ByPlayerHP orders the results by the playerHP field.
func ByPlayerHP(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPlayerHP, opts...).ToFunc()
}

// ByPlayerEnergy orders the results by the playerEnergy field.
func ByPlayerEnergy(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPlayerEnergy, opts...).ToFunc()
}

// ByImage orders the results by the image field.
func ByImage(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldImage, opts...).ToFunc()
}
