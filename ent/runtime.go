// Code generated by ent, DO NOT EDIT.

package ent

import (
	"cardGame/ent/card"
	"cardGame/ent/leaderboard"
	"cardGame/ent/monster"
	"cardGame/ent/schema"
	"cardGame/ent/user"
	"cardGame/ent/userconfig"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	cardFields := schema.Card{}.Fields()
	_ = cardFields
	// cardDescName is the schema descriptor for Name field.
	cardDescName := cardFields[0].Descriptor()
	// card.NameValidator is a validator for the "Name" field. It is called by the builders before save.
	card.NameValidator = cardDescName.Validators[0].(func(string) error)
	leaderboardFields := schema.Leaderboard{}.Fields()
	_ = leaderboardFields
	// leaderboardDescPlayerID is the schema descriptor for playerID field.
	leaderboardDescPlayerID := leaderboardFields[0].Descriptor()
	// leaderboard.PlayerIDValidator is a validator for the "playerID" field. It is called by the builders before save.
	leaderboard.PlayerIDValidator = leaderboardDescPlayerID.Validators[0].(func(string) error)
	monsterFields := schema.Monster{}.Fields()
	_ = monsterFields
	// monsterDescName is the schema descriptor for Name field.
	monsterDescName := monsterFields[0].Descriptor()
	// monster.NameValidator is a validator for the "Name" field. It is called by the builders before save.
	monster.NameValidator = monsterDescName.Validators[0].(func(string) error)
	// monsterDescType is the schema descriptor for Type field.
	monsterDescType := monsterFields[1].Descriptor()
	// monster.TypeValidator is a validator for the "Type" field. It is called by the builders before save.
	monster.TypeValidator = monsterDescType.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUsername is the schema descriptor for username field.
	userDescUsername := userFields[0].Descriptor()
	// user.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	user.UsernameValidator = userDescUsername.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	userconfigFields := schema.UserConfig{}.Fields()
	_ = userconfigFields
	// userconfigDescPlayerID is the schema descriptor for playerID field.
	userconfigDescPlayerID := userconfigFields[0].Descriptor()
	// userconfig.PlayerIDValidator is a validator for the "playerID" field. It is called by the builders before save.
	userconfig.PlayerIDValidator = userconfigDescPlayerID.Validators[0].(func(string) error)
	// userconfigDescLadder is the schema descriptor for ladder field.
	userconfigDescLadder := userconfigFields[2].Descriptor()
	// userconfig.LadderValidator is a validator for the "ladder" field. It is called by the builders before save.
	userconfig.LadderValidator = userconfigDescLadder.Validators[0].(func(string) error)
}
